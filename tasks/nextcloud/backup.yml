---

- name: "Nextcloud backup: Create backup folder"
  ansible.builtin.file:
    path: "{{ nextcloud_backup_dir }}"
    state: directory
    mode: 0755

- name: "Nextcloud backup: backup MySQL database"
  ansible.builtin.command: >
    mysqldump --lock-tables
    -h {{ nextcloud_mysql_host }}
    -u {{ nextcloud_mysql_user }}
    -p{{ nextcloud_mysql_password }}
    {{ nextcloud_mysql_db }} -r {{ nextcloud_backup_db }}
  args:
    creates: "{{ nextcloud_backup_db }}"

- name: "Nextcloud backup: backup config.php"
  ansible.builtin.copy:
    src: "{{ nextcloud_webroot_old }}/config/config.php"
    dest: "{{ nextcloud_backup_config }}"
    mode: 0644
    remote_src: yes

- name: "Nextcloud backup: backup data directory"
  ansible.builtin.command: "cp -a {{ nextcloud_data_dir }} {{ nextcloud_backup_data_dir }}"
  args:
    creates: "{{ nextcloud_backup_data_dir }}"
  when: nextcloud_backup_data | default()

- name: "Nextcloud backup: Verify backup"
  ansible.builtin.stat:
    path: "{{ nextcloud_backup_item }}"
  register: __nextcloud_backup_size
  failed_when: __nextcloud_backup_size.stat.size is undefined or __nextcloud_backup_size.stat.size <= 10
  loop_control:
    loop_var: nextcloud_backup_item
  with_items:
    - "{{ nextcloud_backup_db }}"
    - "{{ nextcloud_backup_config }}"
